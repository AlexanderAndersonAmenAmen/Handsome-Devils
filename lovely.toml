[manifest]
version = "1.0.0"
priority = 0

# -----------------------------------
# New variable to allow for extra booster pack choices
# -----------------------------------

[[patches]]
[patches.pattern]
target = '''=[SMODS _ "decks/game_object.lua"]'''
match_indent = true
position = 'at'
pattern = '''
vars = { cfg.choose, cfg.extra },
'''
payload = '''
vars = { math.min(cfg.choose + G.GAME.modifiers.booster_choice_mod, cfg.extra), cfg.extra },
'''

[[patches]]
[patches.pattern]
target = 'card.lua'
match_indent = true
position = 'after'
pattern = '''
G.GAME.pack_choices = self.ability.choose or self.config.center.config.choose or 1'''
payload = '''
G.GAME.pack_choices = math.min(G.GAME.pack_choices + G.GAME.modifiers.booster_choice_mod, self.config.center.config.extra)
'''

# -----------------------------------
# Head of Medusa
# -----------------------------------

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
    self.children.front:draw_shader('dissolve')
'''
position = "at"
payload = '''
elseif self.ability.effect == 'Stone Card' and self.hnds_petrifying then
    self.children.front:draw_shader('dissolve')
'''
match_indent = true
times = 1

# -----------------------------------
# Stone Ocean
# -----------------------------------

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''
check_and_set_high_score('furthest_ante', G.GAME.round_resets.ante)
'''
position = "after"
payload = '''
G.GAME.ante_stones_scored = 0
'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = '''=[SMODS _ "src/game_object.lua"]'''
pattern = '''
hand[self.key] = math.max(hand['s_'..self.key] + hand['l_'..self.key]*(hand.level - 1), 0)
'''
position = "at"
payload = '''
hand[self.key] = math.max(hand[self.key] + hand['l_'..self.key]*amount, 0)
'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = '''
local card = Card(0,0, 0.5*G.CARD_W, 0.5*G.CARD_H, G.P_CARDS[v[1]], G.P_CENTERS.c_base)
'''
position = "after"
payload = '''
if v.enhancement then
    card:set_ability(G.P_CENTERS[v.enhancement])
end
'''
match_indent = true
times = 1

# -----------------------------
# Public Nuisance 
# -----------------------------

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "G.STATE = G.STATES.NEW_ROUND"
position = "at"
payload = '''
if (#SMODS.find_card('j_hnds_public_nuisance') > 0) and 
G.GAME.current_round.hands_left >= 1 then
    G.STATE = G.STATES.DRAW_TO_HAND
else
    G.STATE = G.STATES.NEW_ROUND
end
'''
match_indent = true
